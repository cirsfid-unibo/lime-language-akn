{
	"name" : "ref",
	"number" : "(?:\\d+(?:[-\\s]?{{latinOrdinals:name}})?\\)?)|(?:[ivxlcdm]+|\\w)\\s{0,2}[).]",
	"sequenceNumbers" : "(?:\\s*[ed,\\s]+{{number}})*",
	"nPoint" : "(?:(?:(?:numer|punt)(?:o|i)|\\bnn?\\b\\W?)\\s*{{number}}{{sequenceNumbers}})|(?:\\d+\\/\\d+\\/CE(?:E)?)",
	"partition" : "(?:{{ordinals:name}}\\s+)?(?:(?:{{partitions:name}}\\s*(?:{{number}}{{sequenceNumbers}}))|(?:{{ordinals:name}}\\s+{{partitions:name}})|(?:{{partitions:name}}\\s+{{ordinals:name}}))",
	"charSeparator" : "[\\s,'-]",
	"wordSeparator" : "(?:{{latinOrdinals:name}}|{{number}}{{sequenceNumbers}}|{{wordSeparators}})",
	"genKnownActs" : "{{knownActs:nome,abbreviazione;urn}}",
	"fragmentsKnownActs" :  "{{knownActs:nome,abbreviazione;!urn}}",
	"refElement" : "{{genKnownActs}}|{{fragmentsKnownActs}}|{{typesOfActs:nome,abbreviazione}}|{{authorities:nome,abbreviazione}}|{{partition}}|{{date}}|{{nPoint}}",
	"patterns" : ["{{refElement}}(?:{{charSeparator}}+(?:{{refElement}}|{{wordSeparator}}))*"],
	/*List of lists, insede of each list all patterns are tested with AND and each list with OR*/
	"requireToPass" : [["{{number}}{{sequenceNumbers}}|{{ordinals:name}}","{{partition}}|{{typesOfActs:nome,abbreviazione}}"],["{{genKnownActs}}"]],
	"utilities" : {
		"trimE" : "({{charSeparator}}+({{wordSeparators}}{{charSeparator}}*)*$)",
		"trimB" : "(^{{charSeparator}}*({{wordSeparators}}({{charSeparator}})+)*)"
	}
}
